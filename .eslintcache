[{"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/App.js":"1","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/reportWebVitals.js":"2","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/index.js":"3","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/context/context.js":"4","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/Landing.js":"5","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/ModifyCard.js":"6","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/ModifyDeck.js":"7","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/ViewCards.js":"8","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/SessionStudy.js":"9","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/UserPreferences.js":"10","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/components/Header.js":"11","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/ViewDecks.js":"12","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/components/styles.js":"13","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/SessionSetup.js":"14","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/components/UserAlert.js":"15"},{"size":1736,"mtime":1613087194093,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1610756123395,"results":"18","hashOfConfig":"17"},{"size":500,"mtime":1610756123394,"results":"19","hashOfConfig":"17"},{"size":3823,"mtime":1613204391532,"results":"20","hashOfConfig":"17"},{"size":1286,"mtime":1613241365731,"results":"21","hashOfConfig":"17"},{"size":5477,"mtime":1613241906976,"results":"22","hashOfConfig":"17"},{"size":6733,"mtime":1612996967683,"results":"23","hashOfConfig":"17"},{"size":5126,"mtime":1612911332951,"results":"24","hashOfConfig":"17"},{"size":10531,"mtime":1612977955904,"results":"25","hashOfConfig":"17"},{"size":2569,"mtime":1612911842300,"results":"26","hashOfConfig":"17"},{"size":1642,"mtime":1612977756437,"results":"27","hashOfConfig":"17"},{"size":2088,"mtime":1612911451714,"results":"28","hashOfConfig":"17"},{"size":5486,"mtime":1613243094697,"results":"29","hashOfConfig":"17"},{"size":6308,"mtime":1613243107294,"results":"30","hashOfConfig":"17"},{"size":2404,"mtime":1613241347851,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fef7fl",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/App.js",[],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/reportWebVitals.js",[],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/index.js",[],["66","67"],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/context/context.js",[],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/Landing.js",["68","69"],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/ModifyCard.js",["70"],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/ModifyDeck.js",["71"],"import React, { useContext, useState, useEffect } from 'react';\nimport { Context, actions } from '../context/context';\nimport { save, rando } from '../functions/globalfxns';\nimport { PageContainer } from '../components/styles';\n\nconst ModifyDeck = (props) => {\n    const [state, dispatch] = useContext(Context);\n    const [deck, setDeck] = useState({\n      name: '',\n      description: '',\n      autoCategories: [],\n      cards: [],\n      id: undefined,\n      creationTime: undefined\n    });\n    const [searchbar, setSearchbar] = useState('');\n    const [foundCards, setFoundCards] = useState([]);\n    const [feedback, setFeedback] = useState({type: 'info', message: `Make or modify a deck of cards here!`});\n  \n    function performSearch(force) {\n      if (!searchbar) return;\n      let searchResults = state.cards.filter(card => card.categories.indexOf(searchbar) > -1);\n  \n      if (!force) {\n        setFoundCards(searchResults);\n      } else if (force) {\n        let newCards = [...deck.cards];\n        searchResults.forEach(card => {\n          let duplicate = false;\n          deck.cards.forEach(currentCard => {\n            if (currentCard.id === card.id) duplicate = true;\n          });\n          if (!duplicate) newCards.push(card);\n        });\n        setDeck({...deck, cards: newCards});\n      }\n    }\n  \n    function createDeck() {\n      let errorMessage = '';\n      if (!deck.name) errorMessage += `Please name the deck. `;\n      if (!deck.cards.length) errorMessage += `A deck should have at least one card in it. `;\n      if (errorMessage) {\n        setFeedback({type: 'error', message: errorMessage});\n      } else {\n        setFeedback({type: 'info', message: `Looks good. Creating new deck now...`});\n  \n        if (deck.id) {\n          console.log(`Deck already exists, we're just modifying it. Doing that now...`);\n          const indexToEdit = state.decks.findIndex(deckedit => deckedit.id === deck.id);\n          dispatch({type: actions.EDIT_A_DECK, payload: {deck: deck, index: indexToEdit}});\n          setFeedback({type: 'info', message: 'Deck successfully updated!'});\n          return;\n        }\n  \n        let creationTime = new Date();\n        let monthID = (creationTime.getMonth() + 1).toString();\n        if (parseInt(monthID) < 10) monthID = 0 + monthID;\n  \n        let dateID = creationTime.getDate().toString();\n        if (parseInt(dateID) < 10) dateID = 0 + dateID;\n  \n        let hoursID = creationTime.getHours();\n        if (parseInt(hoursID) < 10) hoursID = 0 + hoursID;\n        \n        let minutesID = creationTime.getMinutes().toString();\n        if (parseInt(minutesID) < 10) minutesID = 0 + minutesID;\n  \n        let secondsID = creationTime.getSeconds();\n        if (parseInt(secondsID) < 10) secondsID = 0 + secondsID;\n  \n        let randoID = rando(0,9).toString() + rando(0,9).toString() + rando(0,9).toString() + rando(0,9).toString();\n  \n        let creationID = creationTime.getFullYear().toString() + monthID + dateID + hoursID + minutesID + secondsID + randoID;\n        let newDeck = JSON.parse(JSON.stringify(deck));\n        newDeck.creationTime = creationTime;\n        newDeck.id = creationID;\n  \n        dispatch({type: actions.ADD_NEW_DECK, payload: newDeck});\n  \n        setDeck({\n          name: '',\n          description: '',\n          autoCategories: [],\n          cards: [],\n          id: undefined,\n          creationTime: undefined\n        });\n        \n        setFeedback({type: 'info', message: `Deck has been saved!`});\n      }\n    }\n  \n    function toggleCard(card) {\n      const cardsIndex = deck.cards.findIndex(checkcard => checkcard.id === card.id);\n      if (cardsIndex === -1) {\n        // Card's not in the deck, add it\n        let newDeckCards = [...deck.cards, card];\n        setDeck({...deck, cards: newDeckCards});\n        return;\n      } else {\n        // Already in the deck, toss it\n        let newDeckCards = deck.cards.filter(newCard => newCard.id !== card.id);\n        setDeck({...deck, cards: newDeckCards});\n      }\n    }\n  \n    useEffect(() => {\n      dispatch({type: actions.UPDATE_WHATDO, payload: {page: '/modify_deck', currentAction: {}}});\n    }, []);\n  \n    useEffect(() => {\n      save(state);\n    }, [state]);\n  \n    useEffect(() => {\n      if (props.location.state?.deckData) {\n        setDeck(props.location.state.deckData);\n      }\n    }, [props.location.state?.deckData]);\n  \n    // ADD: Deck description\n    // ADD: Filters for difficulty of cards (currently don't exist), maybe dual sliders for min difficulty, max difficulty\n    return (\n      <PageContainer>\n  \n        <div className='flex flex-row' style={{width: '100%', height: '100px', border: '1px solid black'}}>\n          <div className='flex-centered' style={{width: '50%'}}>\n            <input type='text' className='text-input' placeholder={'Name of Deck'} value={deck.name} onChange={e => setDeck({...deck, name: e.target.value})}></input>\n          </div>\n          <div className='flex-centered' style={{width: '50%'}}>\n            <h3>{feedback.message}</h3>\n          </div>\n        </div>\n        \n        <button className='btn small-btn' onClick={createDeck}>{deck.id ? 'Modify Deck' : 'Create Deck'}</button>\n        <h2>Currently, this deck has {deck.cards.length} cards in it.</h2>\n        \n  \n        <label>Search Card Categories</label>\n        <div style={{display: 'flex', flexDirection: 'row', height: '60px', justifyContent: 'space-around', alignItems: 'center'}}>\n          <input type='text' className='text-input' placeholder={'Search card categories'} value={searchbar} onChange={e => setSearchbar(e.target.value)}></input>\n          <button className='btn small-btn' onClick={() => performSearch(false)}>Search</button>\n          <button className='btn small-btn' onClick={() => performSearch(true)}>Search and Force Add</button>\n        </div>\n  \n        <div className='flex flex-row' style={{height: '400px', width: '100%', border: '1px solid black', padding: '10px'}}>\n          {foundCards.map((card, index) => (\n            <CardPicker card={card} key={index} toggleCard={toggleCard} inDeck={deck.cards.findIndex(thiscard => thiscard.id === card.id) > -1} />\n          ))}\n        </div>\n  \n      </PageContainer>\n    )\n}\n  \nconst CardPicker = (props) => {\n    const {card} = props;\n    const inDeck = props.inDeck;\n    return (\n      <div style={{display: 'flex', width: '150px', height: '120px', marginRight: '10px', border: inDeck ? '2px solid black' : '1px solid #CCC', borderRadius: '10px', fontSize: '18px', justifyContent: 'center', alignItems: 'center', textAlign: 'center', backgroundColor: inDeck ? 'white' : '#CCC'}} onClick={() => props.toggleCard(card)}>\n        {card.front}\n      </div>\n    )\n}\n\nexport default ModifyDeck;","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/ViewCards.js",["72","73","74"],"import React, { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Context, actions } from '../context/context';\nimport { save } from '../functions/globalfxns';\n\nconst ViewCards = () => {\n    const [state, dispatch] = useContext(Context);\n    const history = useHistory();\n    const [filter, setFilter] = useState({\n      front: true,\n      back: true,\n      categories: true,\n      description: true\n    });\n    const [search, setSearch] = useState('');\n    const [viewedCards, setViewedCards] = useState([]);\n    const [deletionDetails, setDeletionDetails] = useState({\n      card: {},\n      confirmDelete: false\n    });\n  \n    function deleteCard(card) {\n      setDeletionDetails({...deletionDetails, card: card});\n    }\n  \n    useEffect(() => {\n      dispatch({type: actions.UPDATE_WHATDO, payload: {page: '/view_cards', currentAction: {}}});\n    }, []);\n  \n    useEffect(() => {\n      save(state);\n      setViewedCards(state.cards); // Might have to change this due to card deletion logic? We'll see\n    }, [state]);\n  \n    useEffect(() => {\n      if (search === '') {\n        setViewedCards(state.cards);\n      } else {\n        setViewedCards(state.cards.filter(card => {\n          let searchFound = false;\n          if (filter.front) {\n            searchFound = card.front.includes(search);\n            if (searchFound) return card;\n          }\n          if (filter.back) {\n            searchFound = card.back.includes(search);\n            if (searchFound) return card;\n          }\n          if (filter.categories) {\n            searchFound = card.categories.includes(search);\n            if (searchFound) return card;\n          }\n          if (filter.description) {\n            searchFound = card.description?.includes(search);\n            if (searchFound) return card;\n          }\n          return searchFound;\n        }));\n    }\n    }, [search]);\n  \n    useEffect(() => {\n      // Set up DELETION PROMPT RESPONSE\n      if (deletionDetails.confirmDelete) {\n        dispatch({type: actions.REMOVE_A_CARD, payload: deletionDetails.card.id});\n        setDeletionDetails({card: {}, confirmDelete: false});\n      }\n      // Also set deletionDetails.card back to undefined when done\n    }, [deletionDetails.confirmDelete]);\n  \n    return (\n      <div className='flex-centered flex-col'>\n  \n        {deletionDetails.card?.id &&\n        <div className='flex-centered flex-col'>\n          <h1>Are you sure you want to delete this card?</h1>\n          <div className='flex-centered flex-row'>\n            <button className='btn small-btn' onClick={() => setDeletionDetails({...deletionDetails, confirmDelete: true})}>Yep</button>\n            <button className='btn small-btn' onClick={() => setDeletionDetails({...deletionDetails, card: {}})}>Nah</button>\n          </div>\n        </div>\n        }\n  \n        <div className='flex-centered flex-row' style={{width: '90vw', justifyContent: 'space-around', border: '1px solid black'}}>\n          <p>Search and Mod Cards</p>\n          <div>\n            <label>Search: </label>\n            <input style={{height: '40px', fontSize: '30px'}} type='text' value={search} onChange={e => setSearch(e.target.value)}></input>\n          </div>\n  \n          <div>\n            <label>Search Areas: </label>\n            <button className='btn small-btn' style={{backgroundColor: filter.front ? 'green' : 'red'}} onClick={() => setFilter({...filter, front: !filter.front})} >Front</button>\n            <button className='btn small-btn' style={{backgroundColor: filter.back ? 'green' : 'red'}} onClick={() => setFilter({...filter, back: !filter.back})}   >Back</button>\n            <button className='btn small-btn' style={{backgroundColor: filter.categories ? 'green' : 'red'}} onClick={() => setFilter({...filter, categories: !filter.categories})}   >Categories</button>\n            <button className='btn small-btn' style={{backgroundColor: filter.description ? 'green' : 'red'}} onClick={() => setFilter({...filter, description: !filter.description})}  >Description</button>\n          </div>\n          \n        </div>\n        <div className='cards-list-holder'>\n          {viewedCards.map((card, index) => (\n          <CardPreview card={card} key={index} deleteCard={deleteCard} history={history}/>\n          ))}\n        </div>\n      </div>\n    )\n}\n\nconst CardPreview = (props) => {\n    const {card} = props;\n    const [optionsVisible, setOptionsVisible] = useState(false);\n    const deleteCard = props.deleteCard;\n  \n    return (\n      <div className='card-preview' onMouseEnter={() => setOptionsVisible(true)} onMouseLeave={() => setOptionsVisible(false)}>\n        <div style={{flex: 3}}>\n          <p style={{fontSize: '24px', fontWeight: '700'}}>{card.front}</p>\n        </div>\n        \n        <div style={{visibility: optionsVisible ? 'visible' : 'hidden', flex: 1}}>\n          <button>Peep</button>\n          <button onClick={() => deleteCard(card)}>Delete</button>\n          <button onClick={() => props.history.push('/modify_card', {cardData: card})}>Edit</button>\n        </div>\n  \n      </div>\n    )\n}\n\nexport default ViewCards;","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/SessionStudy.js",["75","76","77","78","79","80","81"],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/UserPreferences.js",["82","83"],"import React, { useContext, useState, useEffect } from 'react';\nimport { Context, actions } from '../context/context';\nimport { save } from '../functions/globalfxns';\n\nconst UserPreferences = () => {\n    const [state, dispatch] = useContext(Context);\n    const [loaderFile, setLoaderFile] = useState();\n    const [appDataString, setAppDataString] = useState('');\n  \n    function copyData() {\n      document.querySelector('#text-app-data').select();\n      document.execCommand('copy');\n    }\n  \n    function saveDataToFile() {\n      const a = document.createElement('a');\n      const file = new Blob([JSON.stringify(state)], {type: 'application/json'});\n  \n      a.href = URL.createObjectURL(file);\n      a.download = 'study_buddy_data.txt';\n      a.click();\n  \n      URL.revokeObjectURL(a.href);\n    }\n  \n    useEffect(() => {\n      dispatch({type: actions.UPDATE_WHATDO, payload: {page: '/user_preferences', currentAction: {}}});\n    }, []);\n  \n    useEffect(() => {\n      save(state);\n    }, [state]);\n  \n    useEffect(() => {\n      if (loaderFile) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n          setAppDataString(reader.result);\n        }\n        reader.readAsText(loaderFile[0]); // I guess since I stored it as an array-y Blob above? Gotta read more into how blob-saving/loading works.\n      }\n    }, [loaderFile]);\n  \n    useEffect(() => {\n      if (appDataString) {\n        // Loads up the app data from the previously-saved .txt file. Huh. May have to do this for Ideas, too.\n        dispatch({type: actions.LOAD_SAVED_DATA, payload: JSON.parse(appDataString)});\n      }\n    }, [appDataString]);\n  \n    return (\n      <div className='flex-centered flex-col' style={{height: '100%', justifyContent: 'space-around'}}>\n        <h1>User Preferences</h1>\n        <div>\n          <button className='btn small-btn'>CLEAR APP DATA</button>\n        </div>\n  \n        <div>\n          <input type='file' id='file-selector' accept='.txt' onChange={e => setLoaderFile(e.target.files)} ></input>\n        </div>\n  \n        <div>\n          <textarea id='text-app-data' value={JSON.stringify(state)} style={{resize: 'none', width: '40vw', height: '300px', border: '1px solid black'}} readOnly={true}></textarea>\n        </div>\n        <div>\n          <button className='btn small-btn' onClick={copyData}>Copy App Data to Clipboard</button>\n        </div>\n        <div>\n          <button className='btn small-btn' onClick={saveDataToFile}>Save App Data as .txt File</button>\n        </div>\n      </div>\n    )\n}\n\nexport default UserPreferences;","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/components/Header.js",["84","85"],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/ViewDecks.js",["86"],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/components/styles.js",[],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/SessionSetup.js",["87","88","89","90","91","92"],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/components/UserAlert.js",["93","94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":9,"column":11,"nodeType":"101","messageId":"102","endLine":9,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":23,"column":8,"nodeType":"105","endLine":23,"endColumn":10,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"104","line":93,"column":8,"nodeType":"105","endLine":93,"endColumn":10,"suggestions":"107"},{"ruleId":"103","severity":1,"message":"104","line":110,"column":8,"nodeType":"105","endLine":110,"endColumn":10,"suggestions":"108"},{"ruleId":"103","severity":1,"message":"104","line":28,"column":8,"nodeType":"105","endLine":28,"endColumn":10,"suggestions":"109"},{"ruleId":"103","severity":1,"message":"110","line":60,"column":8,"nodeType":"105","endLine":60,"endColumn":16,"suggestions":"111"},{"ruleId":"103","severity":1,"message":"112","line":69,"column":8,"nodeType":"105","endLine":69,"endColumn":39,"suggestions":"113"},{"ruleId":"99","severity":1,"message":"114","line":15,"column":12,"nodeType":"101","messageId":"102","endLine":15,"endColumn":17},{"ruleId":"99","severity":1,"message":"115","line":15,"column":19,"nodeType":"101","messageId":"102","endLine":15,"endColumn":27},{"ruleId":"103","severity":1,"message":"116","line":47,"column":5,"nodeType":"117","endLine":63,"endColumn":6},{"ruleId":"103","severity":1,"message":"118","line":65,"column":5,"nodeType":"117","endLine":67,"endColumn":6},{"ruleId":"103","severity":1,"message":"119","line":114,"column":8,"nodeType":"105","endLine":114,"endColumn":32,"suggestions":"120"},{"ruleId":"103","severity":1,"message":"121","line":133,"column":8,"nodeType":"105","endLine":133,"endColumn":42,"suggestions":"122"},{"ruleId":"103","severity":1,"message":"123","line":156,"column":8,"nodeType":"105","endLine":156,"endColumn":19,"suggestions":"124"},{"ruleId":"103","severity":1,"message":"104","line":28,"column":8,"nodeType":"105","endLine":28,"endColumn":10,"suggestions":"125"},{"ruleId":"103","severity":1,"message":"104","line":49,"column":8,"nodeType":"105","endLine":49,"endColumn":23,"suggestions":"126"},{"ruleId":"99","severity":1,"message":"114","line":8,"column":12,"nodeType":"101","messageId":"102","endLine":8,"endColumn":17},{"ruleId":"103","severity":1,"message":"127","line":23,"column":8,"nodeType":"105","endLine":23,"endColumn":18,"suggestions":"128"},{"ruleId":"103","severity":1,"message":"104","line":11,"column":8,"nodeType":"105","endLine":11,"endColumn":10,"suggestions":"129"},{"ruleId":"99","severity":1,"message":"130","line":16,"column":12,"nodeType":"101","messageId":"102","endLine":16,"endColumn":22},{"ruleId":"99","severity":1,"message":"131","line":16,"column":24,"nodeType":"101","messageId":"102","endLine":16,"endColumn":37},{"ruleId":"132","severity":1,"message":"133","line":24,"column":26,"nodeType":"134","messageId":"135","endLine":24,"endColumn":27,"fix":"136"},{"ruleId":"132","severity":1,"message":"133","line":31,"column":26,"nodeType":"134","messageId":"135","endLine":31,"endColumn":27,"fix":"137"},{"ruleId":"103","severity":1,"message":"104","line":56,"column":8,"nodeType":"105","endLine":56,"endColumn":10,"suggestions":"138"},{"ruleId":"103","severity":1,"message":"139","line":63,"column":8,"nodeType":"105","endLine":63,"endColumn":15,"suggestions":"140"},{"ruleId":"99","severity":1,"message":"141","line":8,"column":12,"nodeType":"101","messageId":"102","endLine":8,"endColumn":26},{"ruleId":"103","severity":1,"message":"142","line":46,"column":10,"nodeType":"105","endLine":46,"endColumn":26,"suggestions":"143"},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["146"],["147"],["148"],["149"],"React Hook useEffect has missing dependencies: 'filter.back', 'filter.categories', 'filter.description', 'filter.front', and 'state.cards'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setViewedCards' needs the current value of 'filter.front'.",["150"],"React Hook useEffect has missing dependencies: 'deletionDetails.card.id' and 'dispatch'. Either include them or remove the dependency array.",["151"],"'state' is assigned a value but never used.","'dispatch' is assigned a value but never used.","The 'handleKeyDown' function makes the dependencies of useCallback Hook (at line 42) change on every render. Move it inside the useCallback callback. Alternatively, wrap the definition of 'handleKeyDown' in its own useCallback() Hook.","FunctionDeclaration","The 'handleKeyUp' function makes the dependencies of useCallback Hook (at line 45) change on every render. Move it inside the useCallback callback. Alternatively, wrap the definition of 'handleKeyUp' in its own useCallback() Hook.","React Hook useEffect has missing dependencies: 'finishSession' and 'sessionData'. Either include them or remove the dependency array. You can also do a functional update 'setSessionData(s => ...)' if you only need 'sessionData' in the 'setSessionData' call.",["152"],"React Hook useEffect has a missing dependency: 'sessionData'. Either include it or remove the dependency array. You can also do a functional update 'setSessionData(s => ...)' if you only need 'sessionData' in the 'setSessionData' call.",["153"],"React Hook useEffect has missing dependencies: 'finishSession', 'sessionData.endAt', 'sessionData.endWhen', and 'sessionData.startTime'. Either include them or remove the dependency array.",["154"],["155"],["156"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["157"],["158"],"'deckSearch' is assigned a value but never used.","'setDeckSearch' is assigned a value but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"159","text":"160"},{"range":"161","text":"160"},["162"],"React Hook useEffect has a missing dependency: 'sessionPrep'. Either include it or remove the dependency array. You can also do a functional update 'setSessionPrep(s => ...)' if you only need 'sessionPrep' in the 'setSessionPrep' call.",["163"],"'alertStartTime' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'alert' and 'dispatch'. Either include them or remove the dependency array. You can also do a functional update 'setAlert(a => ...)' if you only need 'alert' in the 'setAlert' call.",["164"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"165","fix":"167"},{"desc":"165","fix":"168"},{"desc":"165","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"165","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"165","fix":"185"},[1097,1098],"",[1398,1399],{"desc":"165","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},"Update the dependencies array to be: [dispatch]",{"range":"191","text":"192"},{"range":"193","text":"192"},{"range":"194","text":"192"},{"range":"195","text":"192"},"Update the dependencies array to be: [filter.back, filter.categories, filter.description, filter.front, search, state.cards]",{"range":"196","text":"197"},"Update the dependencies array to be: [deletionDetails.card.id, deletionDetails.confirmDelete, dispatch]",{"range":"198","text":"199"},"Update the dependencies array to be: [finishSession, sessionData, sessionData.iterations]",{"range":"200","text":"201"},"Update the dependencies array to be: [props.location.state.sessionData, sessionData]",{"range":"202","text":"203"},"Update the dependencies array to be: [finishSession, sessionData.endAt, sessionData.endWhen, sessionData.startTime, studyTime]",{"range":"204","text":"205"},{"range":"206","text":"192"},"Update the dependencies array to be: [appDataString, dispatch]",{"range":"207","text":"208"},"Update the dependencies array to be: [dispatch, history]",{"range":"209","text":"210"},{"range":"211","text":"192"},{"range":"212","text":"192"},"Update the dependencies array to be: [sessionPrep, state]",{"range":"213","text":"214"},"Update the dependencies array to be: [alert, alert.duration, dispatch]",{"range":"215","text":"216"},[729,731],"[dispatch]",[3799,3801],[4142,4144],[907,909],[1899,1907],"[filter.back, filter.categories, filter.description, filter.front, search, state.cards]",[2246,2277],"[deletionDetails.card.id, deletionDetails.confirmDelete, dispatch]",[4680,4704],"[finishSession, sessionData, sessionData.iterations]",[5489,5523],"[props.location.state.sessionData, sessionData]",[6583,6594],"[finishSession, sessionData.endAt, sessionData.endWhen, sessionData.startTime, studyTime]",[938,940],[1622,1637],"[appDataString, dispatch]",[811,821],"[dispatch, history]",[422,424],[2447,2449],[2768,2775],"[sessionPrep, state]",[2027,2043],"[alert, alert.duration, dispatch]"]