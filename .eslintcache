[{"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/components/Header.js":"1","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/SessionSetup.js":"2","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/Notes.js":"3","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/App.js":"4","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/context/context.js":"5","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/components/styles.js":"6","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/SessionStudy.js":"7","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/ModifyCard.js":"8","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/ModifyDeck.js":"9","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/Landing.js":"10","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/components/UserAlert.js":"11","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/Syllabus.js":"12"},{"size":2856,"mtime":1614217099680,"results":"13","hashOfConfig":"14"},{"size":7856,"mtime":1614205069187,"results":"15","hashOfConfig":"14"},{"size":17267,"mtime":1614723929598,"results":"16","hashOfConfig":"14"},{"size":1794,"mtime":1614207638851,"results":"17","hashOfConfig":"14"},{"size":5909,"mtime":1614722545437,"results":"18","hashOfConfig":"14"},{"size":12384,"mtime":1614723869516,"results":"19","hashOfConfig":"14"},{"size":13588,"mtime":1614238822195,"results":"20","hashOfConfig":"14"},{"size":5285,"mtime":1614217161993,"results":"21","hashOfConfig":"14"},{"size":6734,"mtime":1614217312683,"results":"22","hashOfConfig":"14"},{"size":1416,"mtime":1614219226293,"results":"23","hashOfConfig":"14"},{"size":2529,"mtime":1614056529222,"results":"24","hashOfConfig":"14"},{"size":1143,"mtime":1614055670693,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"1fef7fl",{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"35"},"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/components/Header.js",["54","55","56","57"],"import React, { useContext, useEffect, useRef, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Context, actions } from '../context/context';\nimport { load } from '../functions/globalfxns';\nimport { AppHeader, NavContainer, NavButton } from '../components/styles';\n\nconst Header = () => {\n    const [state, dispatch] = useContext(Context);\n    const history = useHistory();\n\n    const keysDown = useRef({});\n    const keyDownCB = useCallback(keyEvent => {\n      handleKeyDown(keyEvent);\n    }, [handleKeyDown]);\n    const keyUpCB = useCallback(keyEvent => {\n      handleKeyUp(keyEvent);\n    }, [handleKeyUp]);\n  \n    function handleKeyDown(e) {\n      // console.log(`Key pressed: ${e.key}`);\n      if (!keysDown.current[e.key]) {\n        switch (e.key) {\n          case 'Escape':\n            dispatch({type: actions.DISMISS_ALERT});\n            break;\n          default:\n            break;\n        }\n        // The below MAY not be necessary without 'ongoing' inputs, \n        keysDown.current[e.key] = true;\n      }\n    }\n  \n    function handleKeyUp(e) {\n      keysDown.current[e.key] = false;\n    }\n  \n    useEffect(() => {\n      window.addEventListener('keydown', keyDownCB);\n      window.addEventListener('keyup', keyUpCB);\n  \n      return () => {\n        window.removeEventListener('keydown', keyDownCB);\n        window.removeEventListener('keyup', keyUpCB);\n      }\n    }, [keyDownCB, keyUpCB]);\n  \n    useEffect(() => {\n      // Fires when app 'loads' freshly, so using this space for all loading logic\n      let loadedData = load();\n      if (loadedData) {\n        loadedData = JSON.parse(loadedData);\n        dispatch({type: actions.LOAD_SAVED_DATA, payload: loadedData});\n        console.log(loadedData);\n        history.push(loadedData.whatdo.page);\n      } else {\n        history.push('/');\n      }\n      \n    }, [dispatch]);\n  \n    return (\n      <AppHeader className='app-header' style={{display: 'flex', flexDirection: 'column'}}>\n        <NavContainer>\n          <NavButton onClick={() => history.push('/')}>Home</NavButton>\n          <NavButton onClick={() => history.push('/notes')}>My Notes</NavButton>\n          <NavButton onClick={() => history.push('/syllabus')}>Syllabus</NavButton>\n          <NavButton onClick={() => history.push('/session_setup')}>Study!</NavButton>\n          <NavButton onClick={() => history.push('/modify_card')}>Create Cards</NavButton>\n          <NavButton onClick={() => history.push('/view_cards')}>My Cards</NavButton>\n          <NavButton onClick={() => history.push('/modify_deck')}>Create Decks</NavButton>\n          <NavButton onClick={() => history.push('/view_decks')}>My Decks</NavButton>        \n          <NavButton onClick={() => history.push('/user_preferences')}>Settings</NavButton>\n        </NavContainer>\n      </AppHeader>\n    )\n}\n\nexport default Header;","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/SessionSetup.js",["58","59","60","61","62"],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/Notes.js",["63","64","65","66"],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/App.js",[],["67","68"],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/context/context.js",["69"],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/components/styles.js",[],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/SessionStudy.js",["70","71","72","73","74"],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/ModifyCard.js",["75","76"],"import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { Context, actions } from '../context/context';\nimport { save, rando } from '../functions/globalfxns';\nimport { PageContainer, ContentContainer, Button, Input, Title, Text } from '../components/styles';\n\nconst ModifyCard = (props) => {\n    const [state, dispatch] = useContext(Context);\n    // ADD: 'difficulty' marker\n    const [card, setCard] = useState({\n      id: undefined,\n      type: '', // Thinking maybe can add optional 'type' like question, definition, etc. which could later be filtered for as well\n      categories: '',\n      topic: '',\n      front: '',\n      back: '',\n      creationTime: undefined\n    });\n    const [feedback, setFeedback] = useState({type: 'info', message: 'Time to MAKE A NEW CARD!'});\n    const focusRef = useRef(null);\n  \n  \n    function createNewCard() {\n      let creationFeedback = '';\n  \n      if (!card.categories.length) {\n        creationFeedback += `Please enter at least one category for this card, so you can search and sort for it later. `;\n      }\n      if (card.front.length < 1) {\n        creationFeedback += `Please ensure there's something written on the front of the card. `;\n      }\n  \n      if (creationFeedback.length) {\n        setFeedback({type: 'error', message: creationFeedback});\n        console.log(`I should be sharing the error: ${creationFeedback}`)\n        return;\n      } else {\n        \n        if (card.id) {\n          console.log(`Oh! This card already exists. We should modify it instead of creating it.`);\n          const indexToEdit = state.cards.findIndex(cardedit => cardedit.id === card.id);\n          dispatch({type: actions.EDIT_A_CARD, payload: {card: card, index: indexToEdit}});\n          setFeedback({type: 'info', message: `You have modified this card successfully!`});\n          return;\n        }\n  \n        const creationTime = new Date();\n        let finalizedCard = {...card};\n        if (!card.creationTime) {\n          finalizedCard = {...finalizedCard, creationTime: creationTime};\n        }\n        if (!card.id) {\n          let monthID = (creationTime.getMonth() + 1).toString();\n          if (parseInt(monthID) < 10) monthID = 0 + monthID;\n    \n          let dateID = creationTime.getDate().toString();\n          if (parseInt(dateID) < 10) dateID = 0 + dateID;\n    \n          let hoursID = creationTime.getHours();\n          if (parseInt(hoursID) < 10) hoursID = 0 + hoursID;\n          \n          let minutesID = creationTime.getMinutes().toString();\n          if (parseInt(minutesID) < 10) minutesID = 0 + minutesID;\n    \n          let secondsID = creationTime.getSeconds();\n          if (parseInt(secondsID) < 10) secondsID = 0 + secondsID;\n    \n          let randoID = rando(0,9).toString() + rando(0,9).toString() + rando(0,9).toString() + rando(0,9).toString();\n    \n          let creationID = creationTime.getFullYear().toString() + monthID + dateID + hoursID + minutesID + secondsID + randoID;\n          finalizedCard = {...finalizedCard, id: creationID};\n        }\n  \n        setFeedback({type: 'info', message: `You have created a new card! Clearing this page if you want to make a new one.`});\n        \n        dispatch({type: actions.ADD_NEW_CARD, payload: finalizedCard});\n  \n        setCard({...card, id: undefined, type: '', topic: '', front: '', back: '', creationTime: undefined});\n        focusRef.current.focus();\n      }\n  \n      \n    }\n  \n  \n    // HERE: useEffect [] on load to update initial user's WHAT IS DO\n    \n    // HERE: Another useEffect to update WHAT IS DO as user goes along and enters stuff\n  \n    // HERE: Yet another useEffect that checks any incoming params, if so, load up for EDIT MODE instead of CREATE MODE\n  \n    useEffect(() => {\n      dispatch({type: actions.UPDATE_WHATDO, payload: {page: '/modify_card', currentAction: {}}});\n    }, []);\n  \n    useEffect(() => {\n      save(state);\n    }, [state]);\n  \n    useEffect(() => {\n      if (props.location.state?.cardData) {\n        setCard({...props.location.state.cardData});\n      }\n    }, [props.location.state?.cardData]);\n  \n    return (\n      <PageContainer>\n        <Title roomy>Note Up a New Card</Title>\n  \n        <Text>Card Categories (as many as you'd like, separated by commas)</Text>\n        <ContentContainer row>\n          <Input type='text' doublewide value={card.categories} onChange={e => setCard({...card, categories: e.target.value})}></Input>\n          <Button tall elbowroom onClick={() => setCard({...card, categories: ''})}>Clear</Button>\n        </ContentContainer>\n\n        <Text>(Optional) Short Description of Card's Topic</Text>\n        <Input type='text' wide value={card.topic} onChange={e => setCard({...card, topic: e.target.value})}></Input>\n  \n        <Text>Front</Text>\n        <textarea className='create-card' ref={focusRef} value={card.front} rows='3' cols='50' onChange={e => setCard({...card, front: e.target.value})}></textarea>\n  \n        <Text>Back</Text>\n        <textarea className='create-card' value={card.back} rows='5' cols='50' onChange={e => setCard({...card, back: e.target.value})}></textarea>\n  \n        <Button roomy tall bold onClick={createNewCard}>{card.id ? 'Update Card' : 'Make New Card'}</Button>\n  \n      </PageContainer>\n    )\n}\n\nexport default ModifyCard;","/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/ModifyDeck.js",[],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/Landing.js",[],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/components/UserAlert.js",["77","78"],"/Users/ejdouglass/Desktop/code2020/foliostudybuddy/src/pages/Syllabus.js",["79","80","81","82","83"],"import React, { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Context, actions } from '../context/context';\nimport { save } from '../functions/globalfxns';\nimport { PageContainer, Title, ColumnContainer, Button, Text, Input } from '../components/styles';\n\nconst Syllabus = () => {\n    const [state, dispatch] = useContext(Context);\n    const [newSyllabusItem, setNewSyllabusItem] = useState('');\n\n    function addNewSyllabusItem() {\n        \n    }\n\n    return (\n        <PageContainer>\n            <Title>SYLLABUS</Title>\n            <ColumnContainer fullheight>\n                {state.syllabus.length > 0 && \n                    <></>\n                }\n                {state.syllabus.length === 0 &&\n                    <Text>You have no items to study yet! Add some here.</Text>\n                }\n                <Input type='text' value={newSyllabusItem} onChange={e => setNewSyllabusItem(e.target.value)}></Input>\n                <Button onClick={addNewSyllabusItem}>Add Study Item</Button>\n            </ColumnContainer>\n        </PageContainer>\n    )\n}\n\nexport default Syllabus;",{"ruleId":"84","severity":1,"message":"85","line":8,"column":12,"nodeType":"86","messageId":"87","endLine":8,"endColumn":17},{"ruleId":"88","severity":1,"message":"89","line":19,"column":5,"nodeType":"90","endLine":32,"endColumn":6},{"ruleId":"88","severity":1,"message":"91","line":34,"column":5,"nodeType":"90","endLine":36,"endColumn":6},{"ruleId":"88","severity":1,"message":"92","line":60,"column":8,"nodeType":"93","endLine":60,"endColumn":18,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":25,"column":26,"nodeType":"97","messageId":"98","endLine":25,"endColumn":27,"fix":"99"},{"ruleId":"95","severity":1,"message":"96","line":32,"column":26,"nodeType":"97","messageId":"98","endLine":32,"endColumn":27,"fix":"100"},{"ruleId":"88","severity":1,"message":"101","line":70,"column":8,"nodeType":"93","endLine":70,"endColumn":10,"suggestions":"102"},{"ruleId":"88","severity":1,"message":"103","line":77,"column":8,"nodeType":"93","endLine":77,"endColumn":15,"suggestions":"104"},{"ruleId":"88","severity":1,"message":"105","line":86,"column":8,"nodeType":"93","endLine":86,"endColumn":20,"suggestions":"106"},{"ruleId":"84","severity":1,"message":"107","line":4,"column":196,"nodeType":"86","messageId":"87","endLine":4,"endColumn":200},{"ruleId":"84","severity":1,"message":"85","line":209,"column":12,"nodeType":"86","messageId":"87","endLine":209,"endColumn":17},{"ruleId":"88","severity":1,"message":"108","line":251,"column":8,"nodeType":"93","endLine":251,"endColumn":17,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":262,"column":65,"nodeType":"112","messageId":"113","endLine":262,"endColumn":66},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"84","severity":1,"message":"118","line":86,"column":17,"nodeType":"86","messageId":"87","endLine":86,"endColumn":25},{"ruleId":"88","severity":1,"message":"119","line":52,"column":5,"nodeType":"90","endLine":71,"endColumn":6},{"ruleId":"88","severity":1,"message":"120","line":73,"column":5,"nodeType":"90","endLine":75,"endColumn":6},{"ruleId":"88","severity":1,"message":"121","line":144,"column":8,"nodeType":"93","endLine":144,"endColumn":32,"suggestions":"122"},{"ruleId":"88","severity":1,"message":"123","line":190,"column":8,"nodeType":"93","endLine":190,"endColumn":42,"suggestions":"124"},{"ruleId":"88","severity":1,"message":"125","line":213,"column":8,"nodeType":"93","endLine":213,"endColumn":19,"suggestions":"126"},{"ruleId":"84","severity":1,"message":"127","line":18,"column":12,"nodeType":"86","messageId":"87","endLine":18,"endColumn":20},{"ruleId":"88","severity":1,"message":"101","line":93,"column":8,"nodeType":"93","endLine":93,"endColumn":10,"suggestions":"128"},{"ruleId":"84","severity":1,"message":"129","line":8,"column":12,"nodeType":"86","messageId":"87","endLine":8,"endColumn":26},{"ruleId":"88","severity":1,"message":"130","line":46,"column":10,"nodeType":"93","endLine":46,"endColumn":26,"suggestions":"131"},{"ruleId":"84","severity":1,"message":"132","line":1,"column":39,"nodeType":"86","messageId":"87","endLine":1,"endColumn":48},{"ruleId":"84","severity":1,"message":"133","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":20},{"ruleId":"84","severity":1,"message":"134","line":3,"column":19,"nodeType":"86","messageId":"87","endLine":3,"endColumn":26},{"ruleId":"84","severity":1,"message":"135","line":4,"column":10,"nodeType":"86","messageId":"87","endLine":4,"endColumn":14},{"ruleId":"84","severity":1,"message":"136","line":8,"column":19,"nodeType":"86","messageId":"87","endLine":8,"endColumn":27},"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The 'handleKeyDown' function makes the dependencies of useCallback Hook (at line 14) change on every render. Move it inside the useCallback callback. Alternatively, wrap the definition of 'handleKeyDown' in its own useCallback() Hook.","FunctionDeclaration","The 'handleKeyUp' function makes the dependencies of useCallback Hook (at line 17) change on every render. Move it inside the useCallback callback. Alternatively, wrap the definition of 'handleKeyUp' in its own useCallback() Hook.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["137"],"rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"138","text":"139"},{"range":"140","text":"139"},"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["141"],"React Hook useEffect has a missing dependency: 'sessionPrep'. Either include it or remove the dependency array. You can also do a functional update 'setSessionPrep(s => ...)' if you only need 'sessionPrep' in the 'setSessionPrep' call.",["142"],"React Hook useEffect has missing dependencies: 'sessionPrep' and 'state.decks'. Either include them or remove the dependency array. You can also do a functional update 'setSessionPrep(s => ...)' if you only need 'sessionPrep' in the 'setSessionPrep' call.",["143"],"'Word' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props.index', 'props.subTopicIndex', and 'props.topicIndex'. Either include them or remove the dependency array.",["144"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-native-reassign",["145"],"no-negated-in-lhs",["146"],"'newTopic' is assigned a value but never used.","The 'handleKeyDown' function makes the dependencies of useCallback Hook (at line 47) change on every render. Move it inside the useCallback callback. Alternatively, wrap the definition of 'handleKeyDown' in its own useCallback() Hook.","The 'handleKeyUp' function makes the dependencies of useCallback Hook (at line 50) change on every render. Move it inside the useCallback callback. Alternatively, wrap the definition of 'handleKeyUp' in its own useCallback() Hook.","React Hook useEffect has missing dependencies: 'finishSession' and 'sessionData'. Either include them or remove the dependency array. You can also do a functional update 'setSessionData(s => ...)' if you only need 'sessionData' in the 'setSessionData' call.",["147"],"React Hook useEffect has a missing dependency: 'sessionData'. Either include it or remove the dependency array. You can also do a functional update 'setSessionData(s => ...)' if you only need 'sessionData' in the 'setSessionData' call.",["148"],"React Hook useEffect has missing dependencies: 'finishSession', 'sessionData.endAt', 'sessionData.endWhen', and 'sessionData.startTime'. Either include them or remove the dependency array.",["149"],"'feedback' is assigned a value but never used.",["150"],"'alertStartTime' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'alert' and 'dispatch'. Either include them or remove the dependency array. You can also do a functional update 'setAlert(a => ...)' if you only need 'alert' in the 'setAlert' call.",["151"],"'useEffect' is defined but never used.","'useHistory' is defined but never used.","'actions' is defined but never used.","'save' is defined but never used.","'dispatch' is assigned a value but never used.",{"desc":"152","fix":"153"},[1104,1105],"",[1405,1406],{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"154","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [dispatch, history]",{"range":"171","text":"172"},"Update the dependencies array to be: [dispatch]",{"range":"173","text":"174"},"Update the dependencies array to be: [sessionPrep, state]",{"range":"175","text":"176"},"Update the dependencies array to be: [deckSearch, sessionPrep, state.decks]",{"range":"177","text":"178"},"Update the dependencies array to be: [dispatch, props.index, props.subTopicIndex, props.topicIndex, section]",{"range":"179","text":"180"},"Update the dependencies array to be: [finishSession, sessionData, sessionData.iterations]",{"range":"181","text":"182"},"Update the dependencies array to be: [props.location.state.sessionData, sessionData]",{"range":"183","text":"184"},"Update the dependencies array to be: [finishSession, sessionData.endAt, sessionData.endWhen, sessionData.startTime, studyTime]",{"range":"185","text":"186"},{"range":"187","text":"174"},"Update the dependencies array to be: [alert, alert.duration, dispatch]",{"range":"188","text":"189"},[1860,1870],"[dispatch, history]",[2894,2896],"[dispatch]",[3215,3222],"[sessionPrep, state]",[3557,3569],"[deckSearch, sessionPrep, state.decks]",[12192,12201],"[dispatch, props.index, props.subTopicIndex, props.topicIndex, section]",[6186,6210],"[finishSession, sessionData, sessionData.iterations]",[7752,7786],"[props.location.state.sessionData, sessionData]",[8846,8857],"[finishSession, sessionData.endAt, sessionData.endWhen, sessionData.startTime, studyTime]",[3852,3854],[2023,2039],"[alert, alert.duration, dispatch]"]